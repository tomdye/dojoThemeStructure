{"version":3,"file":"Button.js","sourceRoot":"","sources":["Button.ts"],"names":[],"mappings":"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","sourcesContent":["import { WidgetBase } from '@dojo/widget-core/WidgetBase';\nimport { DNode } from '@dojo/widget-core/interfaces';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/widget-core/mixins/Themed';\nimport { v } from '@dojo/widget-core/d';\nimport * as css from './styles/button.m.css';\nimport * as themeCss from '../theme/button/button.m.css';\n\nexport type ButtonType = 'submit' | 'reset' | 'button' | 'menu';\n\n/**\n * @type ButtonProperties\n *\n * Properties that can be set on a Button component\n *\n * @property describedBy    ID of element with descriptive text\n * @property disabled       Whether the button is disabled or clickable\n * @property popup       \t\tControls aria-haspopup, aria-expanded, and aria-controls for popup buttons\n * @property name           The button's name attribute\n * @property pressed        Indicates status of a toggle button\n * @property type           Button type can be \"submit\", \"reset\", \"button\", or \"menu\"\n * @property value          Defines a value for the button submitted with form data\n * @property onBlur         Called when the button loses focus\n * @property onClick        Called when the button is clicked\n * @property onFocus        Called when the button is focused\n * @property onKeyDown      Called on the button's keydown event\n * @property onKeyPress     Called on the button's keypress event\n * @property onKeyUp        Called on the button's keyup event\n * @property onMouseDown    Called on the button's mousedown event\n * @property onMouseUp      Called on the button's mouseup event\n * @property onTouchCancel  Called on the button's touchcancel event\n * @property onTouchEnd     Called on the button's touchend event\n * @property onTouchStart   Called on the button's touchstart event\n */\nexport interface ButtonProperties extends ThemedProperties {\n\tdescribedBy?: string;\n\tdisabled?: boolean;\n\tid?: string;\n\tpopup?: { expanded?: boolean; id?: string; } | boolean;\n\tname?: string;\n\tpressed?: boolean;\n\ttype?: ButtonType;\n\tvalue?: string;\n\tonBlur?(event: FocusEvent): void;\n\tonClick?(event: MouseEvent): void;\n\tonFocus?(event: FocusEvent): void;\n\tonKeyDown?(event: KeyboardEvent): void;\n\tonKeyPress?(event: KeyboardEvent): void;\n\tonKeyUp?(event: KeyboardEvent): void;\n\tonMouseDown?(event: MouseEvent): void;\n\tonMouseUp?(event: MouseEvent): void;\n\tonTouchStart?(event: TouchEvent): void;\n\tonTouchEnd?(event: TouchEvent): void;\n\tonTouchCancel?(event: TouchEvent): void;\n}\n\nexport const ButtonBase = ThemedMixin(WidgetBase);\n\n@theme(themeCss)\nexport default class Button extends ButtonBase<ButtonProperties> {\n\tprivate _onBlur (event: FocusEvent) { this.properties.onBlur && this.properties.onBlur(event); }\n\tprivate _onClick (event: MouseEvent) { this.properties.onClick && this.properties.onClick(event); }\n\tprivate _onFocus (event: FocusEvent) { this.properties.onFocus && this.properties.onFocus(event); }\n\tprivate _onKeyDown (event: KeyboardEvent) { this.properties.onKeyDown && this.properties.onKeyDown(event); }\n\tprivate _onKeyPress (event: KeyboardEvent) { this.properties.onKeyPress && this.properties.onKeyPress(event); }\n\tprivate _onKeyUp (event: KeyboardEvent) { this.properties.onKeyUp && this.properties.onKeyUp(event); }\n\tprivate _onMouseDown (event: MouseEvent) { this.properties.onMouseDown && this.properties.onMouseDown(event); }\n\tprivate _onMouseUp (event: MouseEvent) { this.properties.onMouseUp && this.properties.onMouseUp(event); }\n\tprivate _onTouchStart (event: TouchEvent) { this.properties.onTouchStart && this.properties.onTouchStart(event); }\n\tprivate _onTouchEnd (event: TouchEvent) { this.properties.onTouchEnd && this.properties.onTouchEnd(event); }\n\tprivate _onTouchCancel (event: TouchEvent) { this.properties.onTouchCancel && this.properties.onTouchCancel(event); }\n\n\tprotected getContent(): DNode[] {\n\t\treturn this.children;\n\t}\n\n\tprotected getModifierClasses(): (string | null)[] {\n\t\tconst {\n\t\t\tdisabled,\n\t\t\tpopup = false,\n\t\t\tpressed\n\t\t} = this.properties;\n\n\t\treturn [\n\t\t\tdisabled ? themeCss.disabled : null,\n\t\t\tpopup ? themeCss.popup : null,\n\t\t\tpressed ? themeCss.pressed : null\n\t\t];\n\t}\n\n\trender(): DNode {\n\t\tlet {\n\t\t\tdescribedBy,\n\t\t\tdisabled,\n\t\t\tid,\n\t\t\tpopup = false,\n\t\t\tname,\n\t\t\tpressed,\n\t\t\ttype,\n\t\t\tvalue\n\t\t} = this.properties;\n\n\t\tif (popup === true) {\n\t\t\tpopup = { expanded: false, id: '' };\n\t\t}\n\n\t\treturn v('button', {\n\t\t\tclasses: [ ...this.theme([ themeCss.root, ...this.getModifierClasses() ]), css.root ],\n\t\t\tdisabled,\n\t\t\tid,\n\t\t\tname,\n\t\t\ttype,\n\t\t\tvalue,\n\t\t\tonblur: this._onBlur,\n\t\t\tonclick: this._onClick,\n\t\t\tonfocus: this._onFocus,\n\t\t\tonkeydown: this._onKeyDown,\n\t\t\tonkeypress: this._onKeyPress,\n\t\t\tonkeyup: this._onKeyUp,\n\t\t\tonmousedown: this._onMouseDown,\n\t\t\tonmouseup: this._onMouseUp,\n\t\t\tontouchstart: this._onTouchStart,\n\t\t\tontouchend: this._onTouchEnd,\n\t\t\tontouchcancel: this._onTouchCancel,\n\t\t\t'aria-haspopup': popup ? 'true' : null,\n\t\t\t'aria-controls': popup ? popup.id : null,\n\t\t\t'aria-expanded': popup ? popup.expanded + '' : null,\n\t\t\t'aria-pressed': typeof pressed === 'boolean' ? pressed.toString() : null,\n\t\t\t'aria-describedby': describedBy\n\t\t}, [\n\t\t\t...this.getContent()\n\t\t]);\n\t}\n}\n"]}